(* Type Annotations *)

val add : Int -> Int -> Int
let add x y = (x : Int) + (y : Int)

val subtract : Int -> Int -> Int
let subtract x y = x - y : Int

val add2 : Int -> Int
let add2 x = add (2 : Int) x

val uselessMath : Int -> Int -> Int
let uselessMath x y = (add (subtract x 1) : Int -> Int) (subtract y 1)

val uselessMathLam : Int -> (Int -> Int)
let uselessMathLam x = ((\y -> x + y) : 'a -> 'a)

let main = uselessMath 1 2
